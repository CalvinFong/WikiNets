// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define([], function() {
    var ListView;
    return ListView = (function(_super) {
      __extends(ListView, _super);

      function ListView(options) {
        this.options = options;
        ListView.__super__.constructor.call(this);
      }

      ListView.prototype.init = function(instances) {
        var _this = this;
        this.graphModel = instances["GraphModel"];
        this.graphModel.on("change", this.update.bind(this));
        this.listenTo(instances["KeyListener"], "down:80", function() {
          return _this.$el.toggle();
        });
        instances["Layout"].addPlugin(this.el, this.options.pluginOrder, 'List View', true);
        return this.data;
      };

      ListView.prototype.update = function() {
        var $container, allNodes, blacklist;
        this.$el.empty();
        allNodes = this.graphModel.getNodes();
        $container = $("<div class=\"node-profile-helper\"/>").appendTo(this.$el);
        blacklist = ["index", "x", "y", "px", "py", "fixed", "selected", "weight"];
        return _.each(allNodes, function(node) {
          var $nodeDiv, $seeNeighbors;
          $nodeDiv = $("<div class=\"node-profile\"/>").appendTo($container);
          $("<div class=\"node-profile-title\">" + node['text'] + "</div>").appendTo($nodeDiv);
          _.each(node, function(value, property) {
            if (blacklist.indexOf(property) < 0) {
              return $("<div class=\"node-profile-property\">" + property + ":  " + value + "</div>").appendTo($nodeDiv);
            }
          });
          return $seeNeighbors = $("<input id=\"seeNeighborsButton" + node['_id'] + "\" type=\"button\" value=\"+\">").appendTo($nodeDiv);
        });
      };

      return ListView;

    })(Backbone.View);
  });

}).call(this);
