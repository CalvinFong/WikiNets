// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define([], function() {
    var ShowAll;
    return ShowAll = (function(_super) {
      __extends(ShowAll, _super);

      function ShowAll(options) {
        this.options = options;
        this.loadAllNodes = __bind(this.loadAllNodes, this);
        ShowAll.__super__.constructor.call(this);
      }

      ShowAll.prototype.init = function(instances) {
        this.render();
        this.graphModel = instances["GraphModel"];
        this.dataProvider = instances["local/WikiNetsDataProvider"];
        return instances["Layout"].addPlugin(this.el, this.options.pluginOrder, 'ShowAll', true);
      };

      ShowAll.prototype.render = function() {
        var $showAllButton, container,
          _this = this;
        container = $("<div />").addClass("show-all-container").appendTo(this.$el);
        $showAllButton = $("<input type=\"button\" value=\"Show All\"></input>").appendTo(container);
        return $showAllButton.click(function() {
          return _this.dataProvider.getEverything(_this.loadAllNodes);
        });
      };

      ShowAll.prototype.loadAllNodes = function(nodes) {
        var node, _i, _len, _results;
        _results = [];
        for (_i = 0, _len = nodes.length; _i < _len; _i++) {
          node = nodes[_i];
          _results.push(this.graphModel.putNode(node));
        }
        return _results;
      };

      return ShowAll;

    })(Backbone.View);
  });

}).call(this);
